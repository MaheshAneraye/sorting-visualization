name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Set image tag (run number-based)
      id: vars
      run: echo "::set-output name=image_tag::sorting-${{ github.run_number }}"

    - name: Build the Docker image
      run: |
        IMAGE_TAG=${{ steps.vars.outputs.image_tag }}
        docker build . --file Dockerfile --tag $IMAGE_TAG

    - name: Tag the Docker image for Docker Hub
      run: |
        IMAGE_TAG=${{ steps.vars.outputs.image_tag }}
        docker tag $IMAGE_TAG ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_TAG:latest

    - name: Push the Docker image to Docker Hub
      run: |
        IMAGE_TAG=${{ steps.vars.outputs.image_tag }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_TAG:latest

    # Deploy to Minikube
    - name: Set up Minikube
      uses: `manusa/actions-setup-minikube@v2.3.0`
      with:
        minikube_version: 'latest'
        kubernetes_version: '1.20.2'  # Specify your desired version
        driver: docker  # Use docker driver

    - name: Deploy to Minikube
      run: |
        # Set the image name with the latest tag
        IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/sorting-${{ github.run_number }}:latest
        
        # Create deployment and service YAML files
        echo "
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: sorting
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: sorting
          template:
            metadata:
              labels:
                app: sorting
            spec:
              containers:
                - name: sorting
                  image: $IMAGE_NAME
                  ports:
                    - containerPort: 3000
        " > deployment.yaml

        echo "
        apiVersion: v1
        kind: Service
        metadata:
          name: sorting-service
        spec:
          type: NodePort
          selector:
            app: sorting
          ports:
            - port: 3000
              targetPort: 3000
              nodePort: 30001
        " > service.yaml

        # Apply the deployment and service
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

    - name: Get Minikube Service URL
      run: |
        echo "Application is running at:"
        minikube service sorting-service --url
