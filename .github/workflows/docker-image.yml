name: Docker Image CI and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Set image tag (run number-based)
      id: vars
      run: echo "::set-output name=image_tag::sorting-${{ github.run_number }}"

    - name: Build the Docker image
      run: |
        IMAGE_TAG=${{ steps.vars.outputs.image_tag }}
        docker build . --file Dockerfile --tag $IMAGE_TAG

    - name: Tag the Docker image for Docker Hub
      run: |
        IMAGE_TAG=${{ steps.vars.outputs.image_tag }}
        docker tag $IMAGE_TAG ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_TAG:latest

    - name: Push the Docker image to Docker Hub
      run: |
        IMAGE_TAG=${{ steps.vars.outputs.image_tag }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_TAG:latest

    # Deploy to Docker Swarm on EC2
    - name: SSH into Swarm Manager and Deploy
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SWARM_MANAGER_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Deploying Docker service on Swarm Manager..."
          docker service update --image ${{ secrets.DOCKER_HUB_USERNAME }}/sorting-${{ github.run_number }}:latest my-service || docker service create --name my-service --replicas 3 -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/sorting-${{ github.run_number }}:latest

    # Verify the service status after deployment
    - name: Verify Docker service status
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SWARM_MANAGER_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Checking the status of the Docker service..."
          docker service ls
